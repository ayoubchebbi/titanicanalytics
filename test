 Définir les dates de début et de fin
Date startDate = Date.newInstance(2024, 10, 20);
Date endDate = Date.newInstance(2024, 10, 26);

// Récupérer les timesheets pour la période spécifiée
List<TimeSheet> timesheets = [
    SELECT Id, 
           OwnerId, 
           ServiceResourceId,
           StartDate,
           EndDate,
           TimeSheetNumber
    FROM TimeSheet
    WHERE StartDate >= :startDate 
    AND EndDate <= :endDate
];

System.debug('Nombre de timesheets trouvés: ' + timesheets.size());

// Map pour stocker la relation ServiceResource -> User
Map<Id, Id> serviceResourceToUserMap = new Map<Id, Id>();

// Récupérer tous les ServiceResource utilisés dans les timesheets
Set<Id> serviceResourceIds = new Set<Id>();
for (TimeSheet ts : timesheets) {
    if (ts.ServiceResourceId != null) {
        serviceResourceIds.add(ts.ServiceResourceId);
    }
}

// Récupérer les informations des ServiceResource et leurs utilisateurs associés
List<ServiceResource> serviceResources = [
    SELECT Id, RelatedRecordId
    FROM ServiceResource
    WHERE Id IN :serviceResourceIds
    AND RelatedRecordId != null
];

// Créer la map ServiceResource -> User
for (ServiceResource sr : serviceResources) {
    serviceResourceToUserMap.put(sr.Id, sr.RelatedRecordId);
}

// Liste pour stocker les timesheets à mettre à jour
List<TimeSheet> timesheetsToUpdate = new List<TimeSheet>();

// Mettre à jour les propriétaires des timesheets
for (TimeSheet ts : timesheets) {
    if (ts.ServiceResourceId != null && 
        serviceResourceToUserMap.containsKey(ts.ServiceResourceId)) {
        
        Id newOwnerId = serviceResourceToUserMap.get(ts.ServiceResourceId);
        
        // Vérifier si le propriétaire doit être changé
        if (ts.OwnerId != newOwnerId) {
            ts.OwnerId = newOwnerId;
            timesheetsToUpdate.add(ts);
            System.debug('Timesheet ' + ts.TimeSheetNumber + ' - Changement de propriétaire vers: ' + newOwnerId);
        }
    }
}

System.debug('Nombre de timesheets à mettre à jour: ' + timesheetsToUpdate.size());

// Effectuer la mise à jour
if (!timesheetsToUpdate.isEmpty()) {
    try {
        update timesheetsToUpdate;
        System.debug('Mise à jour réussie de ' + timesheetsToUpdate.size() + ' timesheets');
    } catch (DmlException e) {
        System.debug('Erreur lors de la mise à jour: ' + e.getMessage());
    }
} else {
    System.debug('Aucun timesheet à mettre à jour');
}
