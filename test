/**
 * @description This method retrieves Work Orders linked to a list of Service Appointments
 * and updates specific fields (TEKCO_Brand__c and TEKCO_Country__c) on the Work Orders
 * with values from the corresponding Service Appointments
 * @param serviceAppointments List of Service Appointment records
 * @return List<WorkOrder> List of updated Work Orders
 */
public static List<WorkOrder> updateWorkOrdersFromServiceAppointments(List<ServiceAppointment> serviceAppointments) {
    // Exit if empty list is provided
    if (serviceAppointments == null || serviceAppointments.isEmpty()) {
        return new List<WorkOrder>();
    }
    
    // Get all Service Appointment Ids for querying
    Set<Id> serviceAppointmentIds = new Set<Id>();
    for (ServiceAppointment sa : serviceAppointments) {
        serviceAppointmentIds.add(sa.Id);
    }
    
    // Query Work Orders linked to the Service Appointments
    List<WorkOrder> workOrders = [
        SELECT Id, TEKCO_Brand__c, TEKCO_Country__c, TEKCO_ServiceAppointment__c 
        FROM WorkOrder 
        WHERE TEKCO_ServiceAppointment__c IN :serviceAppointmentIds
    ];
    
    // Create a map of Service Appointments for easy access
    Map<Id, ServiceAppointment> saMap = new Map<Id, ServiceAppointment>(serviceAppointments);
    
    // Update the Work Orders with Brand and Country values from their related Service Appointments
    for (WorkOrder wo : workOrders) {
        ServiceAppointment relatedSA = saMap.get(wo.TEKCO_ServiceAppointment__c);
        if (relatedSA != null) {
            wo.TEKCO_Brand__c = relatedSA.TEKCO_Brand__c;
            wo.TEKCO_Country__c = relatedSA.TEKCO_Country__c;
        }
    }
    
    // Return the list of updated Work Orders (not yet committed to database)
    return workOrders;
}
