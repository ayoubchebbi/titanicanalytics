<apex:page controller="YourController">
    <apex:form>
        <!-- Search Box for Filtering -->
        <input type="text" id="searchField" onkeyup="filterList()" placeholder="Search Territory..." />

        <ul class="slds-has-inline-block-links_space" id="territoryList">
            <!-- "Select All" Checkbox -->
            <li class="slds-p-around_x-small border-bottom">
                <apex:inputCheckbox value="{!isSelectAllTer}" id="selectAllTer" styleClass="selectAllTerParent" onchange="selectAllElements(this, 'territoryElement')">
                    <apex:actionSupport event="onclick" action="{!selectAllTerritories}" reRender="selectedDrivers, vehicleStock" onComplete="refreshDriverList('{!JSENCODE(driversList)}');"></apex:actionSupport>
                </apex:inputCheckbox>
                <apex:outputLabel value="Select all" for="selectAllTer"/>
            </li>

            <!-- List of Territories -->
            <apex:repeat value="{!serviceTerritoryItems}" var="item">
                <li class="slds-p-around_x-small territory-item">
                    <apex:inputCheckbox styleClass="territoryElement" value="{!item.checked}" onChange="updateTerritoriesList(this, '{!item.value}');">
                        <apex:actionSupport event="onclick" action="{!onChangeServiceTerritory}" reRender="selectedDrivers, vehicleStock" onComplete="refreshDriverList('{!JSENCODE(driversList)}');"></apex:actionSupport>
                    </apex:inputCheckbox>
                    <input type="hidden" value="{!item.value}" class="territoryElementHidden" />
                    <apex:outputLabel value="{!item.label}" class="territory-label"/>
                </li>
            </apex:repeat>
        </ul>
    </apex:form>

    <script>
        function filterList() {
            let input = document.getElementById("searchField").value.toUpperCase();
            let items = document.querySelectorAll(".territory-item");

            items.forEach(item => {
                let label = item.querySelector(".territory-label");
                if (label) {
                    let text = label.innerText || label.textContent;
                    item.style.display = text.toUpperCase().includes(input) ? "" : "none";
                }
            });
        }
    </script>
</apex:page>
