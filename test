export function buildProductTree(products) {
  const productMap = new Map();
  products.forEach(product => {
    productMap.set(product.treeId, { ...product, children: [] });
  });

  const trees = [];

  products.forEach(product => {
    const currentProduct = productMap.get(product.treeId);

    if (product.parentTreeId) {
      const parent = productMap.get(product.parentTreeId);
      if (parent) {
        parent.children.push(currentProduct);
      }
    } else {
      trees.push(currentProduct);
    }
  });

  function sortTree(node) {
    if (node.children && node.children.length > 0) {
      node.children.sort((a, b) => {
        const levelOrder = { '1': 1, '2': 2, '3': 3, 'sku': 4 };
        const levelA = levelOrder[a.exchangeableLevelValue] || 5;
        const levelB = levelOrder[b.exchangeableLevelValue] || 5;

        if (levelA !== levelB) {
          return levelA - levelB;
        }
        return (a.name || '').localeCompare(b.name || '');
      });

      node.children.forEach(child => sortTree(child));
    }
  }

  trees.forEach(tree => sortTree(tree));
  trees.sort((a, b) => (a.name || '').localeCompare(b.name || ''));
  return trees;
}
