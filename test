import { LightningElement, api } from 'lwc';
import { gql, graphql } from 'lightning/uiGraphQLApi';

const MY_QUERY = gql`
    query GetMyData($date: String!, $timesheetId: ID!) {
        myData(date: $date, timesheetId: $timesheetId) {
            id
            name
        }
    }
`;

export default class MyComponent extends LightningElement {
    @api date;
    @api timesheetId;

    connectedCallback() {
        // Only works if `date` and `timesheetId` are already available!
        if (this.date && this.timesheetId) {
            this.fetchData(this.date, this.timesheetId);
        } else {
            console.warn('date or timesheetId not set yet in connectedCallback');
        }
    }

    async fetchData(date, timesheetId) {
        try {
            const result = await graphql({
                query: MY_QUERY,
                variables: {
                    date,
                    timesheetId
                }
            });
            console.log('GraphQL result:', result.data.myData);
        } catch (error) {
            console.error('GraphQL error:', error);
        }
    }
}
